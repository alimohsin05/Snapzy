
import com.mongodb.MongoClient;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.result.DeleteResult;
import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import org.bson.Document;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Ali
 */
public class Snaps extends javax.swing.JFrame {

    /**
     * Creates new form Report
     */
    public Snaps() {
        initComponents();
        Connect();
        refreshDocumentDisplay();
    }
    
    MongoClient mongo;
    MongoDatabase dbconnection;
    MongoCollection<org.bson.Document> collection;
    
public void Connect(){
    mongo = new MongoClient("localhost",27017);
    dbconnection = mongo.getDatabase("Snapchat");
    collection = dbconnection.getCollection("Snaps");
    System.out.println("connected");
  
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtsnapid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtsenderid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtreceiverid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtcontent = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txttimestamp = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        addbutton = new javax.swing.JButton();
        searchbutton = new javax.swing.JButton();
        updatebutton = new javax.swing.JButton();
        deletebutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DocumentViewer = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 51));

        jPanel2.setBackground(new java.awt.Color(255, 255, 51));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 330));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Snap ID");

        txtsnapid.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtsnapid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsnapidActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Sender ID");

        txtsenderid.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtsenderid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsenderidActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Reciever ID");

        txtreceiverid.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtreceiverid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtreceiveridActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Content");

        txtcontent.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtcontent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcontentActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Timestamp");

        txttimestamp.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txttimestamp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttimestampActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 0, 51));
        jLabel7.setText("Snaps");

        addbutton.setBackground(new java.awt.Color(241, 241, 127));
        addbutton.setText("Add");
        addbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbuttonActionPerformed(evt);
            }
        });

        searchbutton.setBackground(new java.awt.Color(241, 241, 127));
        searchbutton.setText("Search");
        searchbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbuttonActionPerformed(evt);
            }
        });

        updatebutton.setBackground(new java.awt.Color(241, 241, 127));
        updatebutton.setText("Update");
        updatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebuttonActionPerformed(evt);
            }
        });

        deletebutton.setBackground(new java.awt.Color(241, 241, 127));
        deletebutton.setText("Delete");
        deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebuttonActionPerformed(evt);
            }
        });

        DocumentViewer.setColumns(20);
        DocumentViewer.setRows(5);
        jScrollPane1.setViewportView(DocumentViewer);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(223, 223, 223))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(addbutton)
                                .addGap(18, 18, 18)
                                .addComponent(searchbutton)
                                .addGap(18, 18, 18)
                                .addComponent(updatebutton)
                                .addGap(18, 18, 18)
                                .addComponent(deletebutton))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txttimestamp, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtcontent, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtreceiverid, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtsenderid, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtsnapid, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtsnapid, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtsenderid, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtreceiverid, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcontent, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttimestamp, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addbutton)
                    .addComponent(searchbutton)
                    .addComponent(updatebutton)
                    .addComponent(deletebutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void deletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebuttonActionPerformed
        int snapId = Integer.parseInt(txtsnapid.getText());
        int confirmDelete = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this snap?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        if (confirmDelete == JOptionPane.YES_OPTION) {
            deleteSnapById(snapId);
        }
        else{
            txtsnapid.setText("");
            txtsenderid.setText("");
            txtreceiverid.setText("");
            txtcontent.setText("");
            txttimestamp.setText("");
        }
        refreshDocumentDisplay();

    }//GEN-LAST:event_deletebuttonActionPerformed

    private void updatebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebuttonActionPerformed
        updateSnap();
        refreshDocumentDisplay();
    }//GEN-LAST:event_updatebuttonActionPerformed

    private void searchbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbuttonActionPerformed
        int snapId = Integer.parseInt(txtsnapid.getText());
        searchSnapById(snapId);
        refreshDocumentDisplay();
    }//GEN-LAST:event_searchbuttonActionPerformed

    ////////////////////////////////////////////////////////////
    private void addbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbuttonActionPerformed
        // TODO add your handling code here:
        int snapId = Integer.parseInt(txtsnapid.getText());
        String senderId = txtsenderid.getText();
        String receiverId = txtreceiverid.getText();
        String content = txtcontent.getText();
        String timestamp = txttimestamp.getText();

        Document doc = new Document("snapId", snapId)
        .append("senderId", senderId)
        .append("receiverId", receiverId)
        .append("content", content)
        .append("timestamp", timestamp);

        collection.insertOne(doc);
        JOptionPane.showMessageDialog(this, "Snap inserted successfully");

        refreshDocumentDisplay();
    }//GEN-LAST:event_addbuttonActionPerformed

    private void txttimestampActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttimestampActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttimestampActionPerformed

    private void txtcontentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcontentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcontentActionPerformed

    private void txtreceiveridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtreceiveridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtreceiveridActionPerformed

    private void txtsenderidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsenderidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsenderidActionPerformed

    private void txtsnapidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsnapidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsnapidActionPerformed

   //view function hai basically
   private void refreshDocumentDisplay() {
    StringBuilder sb = new StringBuilder();

    for (Document doc : collection.find()) {
        sb.append("Snap ID: ").append(doc.getInteger("snapId")).append("\n");
        sb.append("Sender ID: ").append(doc.getString("senderId")).append("\n");
        sb.append("Receiver ID: ").append(doc.getString("receiverId")).append("\n");
        sb.append("Content: ").append(doc.getString("content")).append("\n");
        sb.append("Timestamp: ").append(doc.getString("timestamp")).append("\n");
        sb.append("--------------------------------------------------\n");
    }

    DocumentViewer.setText(sb.toString());
}
    /////////////////////////////////////////////////////////////////////////////////
    private void updateSnap() {
    int snapId = Integer.parseInt(txtsnapid.getText());
    String senderId = txtsenderid.getText();
    String receiverId = txtreceiverid.getText();
    String content = txtcontent.getText();
    String timestamp = txttimestamp.getText();
    
    Document query = new Document("snapId", snapId);
    Document update = new Document("$set", new Document("senderId", senderId)
                                              .append("receiverId", receiverId)
                                              .append("content", content)
                                              .append("timestamp", timestamp));
    
    System.out.println("Query: " + query.toJson());
    System.out.println("Update: " + update.toJson());
    
    long modifiedCount = collection.updateOne(query, update).getModifiedCount();
    
    if (modifiedCount > 0) {
        JOptionPane.showMessageDialog(this, "Snap updated successfully");
    } else {
        JOptionPane.showMessageDialog(this, "No snap found with Snap ID: " + snapId);
    }
   }
    private void searchSnapById(int snapId) {
    Document query = new Document("snapId", snapId);
    Document foundSnap = collection.find(query).first();
    
    if (foundSnap != null) {
        txtsnapid.setText(String.valueOf(foundSnap.getInteger("snapId")));
        txtsenderid.setText(foundSnap.getString("senderId"));
        txtreceiverid.setText(foundSnap.getString("receiverId"));
        txtcontent.setText(foundSnap.getString("content"));
        txttimestamp.setText(foundSnap.getString("timestamp"));
    } else {
        txtsenderid.setText("");
        txtreceiverid.setText("");
        txtcontent.setText("");
        txttimestamp.setText("");
        JOptionPane.showMessageDialog(this, "No snap found with Snap ID: " + snapId);
    }
}
    private void deleteSnapById(int snapId) {
    Document query = new Document("snapId", snapId);
    DeleteResult result = collection.deleteOne(query);
    
    if (result.getDeletedCount() > 0) {
        JOptionPane.showMessageDialog(this, "Snap with Snap ID " + snapId + " deleted successfully."); 
        txtsnapid.setText("");
        txtsenderid.setText("");
        txtreceiverid.setText("");
        txtcontent.setText("");
        txttimestamp.setText("");
    } else {
        JOptionPane.showMessageDialog(this, "No snap found with Snap ID: " + snapId);
    }
}
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Metal".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//           
//            public void run() {
//                new Snaps().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea DocumentViewer;
    private javax.swing.JButton addbutton;
    private javax.swing.JButton deletebutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton searchbutton;
    private javax.swing.JTextField txtcontent;
    private javax.swing.JTextField txtreceiverid;
    private javax.swing.JTextField txtsenderid;
    private javax.swing.JTextField txtsnapid;
    private javax.swing.JTextField txttimestamp;
    private javax.swing.JButton updatebutton;
    // End of variables declaration//GEN-END:variables
}
